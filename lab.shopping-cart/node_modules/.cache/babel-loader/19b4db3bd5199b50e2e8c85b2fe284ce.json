{"ast":null,"code":"import _toConsumableArray from \"/Users/gabrielapleban/CL-Redux-Labs/lab.shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// Reducer zwracający tablicę produktów\nimport { ADD_PRODUCT, REMOVE_PRODUCT } from \"./actions\";\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  if (type === ADD_PRODUCT) {\n    return [].concat(_toConsumableArray(state), [payload]);\n  }\n\n  if (type === REMOVE_PRODUCT) {\n    var copy = _toConsumableArray(state);\n\n    var idx = state.findIndex(function (_ref2) {\n      var name = _ref2.name,\n          price = _ref2.price;\n      return payload.name === name && payload.price === price;\n    });\n    copy.splice(idx, 1);\n    return copy;\n  }\n\n  return state;\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/gabrielapleban/CL-Redux-Labs/lab.shopping-cart/src/redux/reducer.js"],"names":["ADD_PRODUCT","REMOVE_PRODUCT","reducer","state","type","payload","copy","idx","findIndex","name","price","splice"],"mappings":";AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,WAA5C;;AACA,SAASC,OAAT,GAAgD;AAAA,MAA/BC,KAA+B,uEAAvB,EAAuB;;AAAA;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AAC9C,MAAID,IAAI,KAAKJ,WAAb,EAA0B;AACxB,wCAAWG,KAAX,IAAkBE,OAAlB;AACD;;AACD,MAAID,IAAI,KAAKH,cAAb,EAA6B;AAC3B,QAAMK,IAAI,sBAAOH,KAAP,CAAV;;AACA,QAAII,GAAG,GAAGJ,KAAK,CAACK,SAAN,CACR;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,UAASC,KAAT,SAASA,KAAT;AAAA,aAAqBL,OAAO,CAACI,IAAR,KAAiBA,IAAjB,IAAyBJ,OAAO,CAACK,KAAR,KAAkBA,KAAhE;AAAA,KADQ,CAAV;AAGAJ,IAAAA,IAAI,CAACK,MAAL,CAAYJ,GAAZ,EAAiB,CAAjB;AACA,WAAOD,IAAP;AACD;;AACD,SAAOH,KAAP;AACD;;AACD,eAAeD,OAAf","sourcesContent":["// Reducer zwracający tablicę produktów\nimport { ADD_PRODUCT, REMOVE_PRODUCT } from \"./actions\";\nfunction reducer(state = [], { type, payload }) {\n  if (type === ADD_PRODUCT) {\n    return [...state, payload];\n  }\n  if (type === REMOVE_PRODUCT) {\n    const copy = [...state];\n    let idx = state.findIndex(\n      ({ name, price }) => payload.name === name && payload.price === price\n    );\n    copy.splice(idx, 1);\n    return copy;\n  }\n  return state;\n}\nexport default reducer;"]},"metadata":{},"sourceType":"module"}