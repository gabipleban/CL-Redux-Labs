{"ast":null,"code":"import api from '../api';\nvar GET_QUOTE = \"GET_QUOTE\";\nvar GET_QUOTE_SUCCESS = \"GET_QUOTE_SUCCESS\";\nvar GET_QUOTE_FAILURE = \"GET_QUOTE_FAILURE\";\n\nvar getQuote = function getQuote() {\n  return {\n    type: GET_QUOTE\n  };\n};\n\nvar getQuoteSuccess = function getQuoteSuccess(response) {\n  return {\n    type: GET_QUOTE_SUCCESS,\n    payload: response\n  };\n};\n\nvar getQuoteFailure = function getQuoteFailure(error) {\n  return {\n    type: GET_QUOTE_FAILURE,\n    payload: error\n  };\n};\n\nvar fetchQuote = function fetchQuote() {\n  return function (dispatch) {\n    dispatch(getQuote());\n    api.fetchQuote().then(function (res) {\n      dispatch(getQuoteSuccess(res));\n    }).catch(function (err) {\n      dispatch(getQuoteFailure(err));\n    });\n  };\n};\n\nexport default {\n  GET_QUOTE: GET_QUOTE,\n  GET_QUOTE_SUCCESS: GET_QUOTE_SUCCESS,\n  GET_QUOTE_FAILURE: GET_QUOTE_FAILURE,\n  getQuote: getQuote,\n  getQuoteSuccess: getQuoteSuccess,\n  getQuoteFailure: getQuoteFailure,\n  fetchQuote: fetchQuote\n};","map":{"version":3,"sources":["/Users/gabrielapleban/CL-Redux-Labs/lab.async/src/redux/actions.js"],"names":["api","GET_QUOTE","GET_QUOTE_SUCCESS","GET_QUOTE_FAILURE","getQuote","type","getQuoteSuccess","response","payload","getQuoteFailure","error","fetchQuote","dispatch","then","res","catch","err"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AAEA,IAAMC,SAAS,GAAG,WAAlB;AACA,IAAMC,iBAAiB,GAAG,mBAA1B;AACA,IAAMC,iBAAiB,GAAG,mBAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,SAAO;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJD;;AAMA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAc;AACpC,SAAO;AACLF,IAAAA,IAAI,EAAEH,iBADD;AAELM,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALD;;AAOA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLL,IAAAA,IAAI,EAAEF,iBADD;AAELK,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAI,UAACC,QAAD,EAAY;AACjCA,IAAAA,QAAQ,CAACR,QAAQ,EAAT,CAAR;AACAJ,IAAAA,GAAG,CAACW,UAAJ,GACGE,IADH,CACQ,UAACC,GAAD,EAAO;AACXF,MAAAA,QAAQ,CAACN,eAAe,CAACQ,GAAD,CAAhB,CAAR;AACD,KAHH,EAIGC,KAJH,CAIS,UAACC,GAAD,EAAQ;AACbJ,MAAAA,QAAQ,CAACH,eAAe,CAACO,GAAD,CAAhB,CAAR;AACD,KANH;AAOD,GATkB;AAAA,CAAnB;;AAaA,eAAe;AAACf,EAAAA,SAAS,EAATA,SAAD;AAAWC,EAAAA,iBAAiB,EAAjBA,iBAAX;AAA6BC,EAAAA,iBAAiB,EAAjBA,iBAA7B;AAA+CC,EAAAA,QAAQ,EAARA,QAA/C;AAAwDE,EAAAA,eAAe,EAAfA,eAAxD;AAAwEG,EAAAA,eAAe,EAAfA,eAAxE;AAAwFE,EAAAA,UAAU,EAAVA;AAAxF,CAAf","sourcesContent":["import api from '../api'\n\nconst GET_QUOTE = \"GET_QUOTE\";\nconst GET_QUOTE_SUCCESS = \"GET_QUOTE_SUCCESS\";\nconst GET_QUOTE_FAILURE = \"GET_QUOTE_FAILURE\";\n\nconst getQuote = () => {\n  return {\n    type: GET_QUOTE,\n  };\n};\n\nconst getQuoteSuccess = (response) => {\n  return {\n    type: GET_QUOTE_SUCCESS,\n    payload: response,\n  };\n};\n\nconst getQuoteFailure = (error) => {\n  return {\n    type: GET_QUOTE_FAILURE,\n    payload: error,\n  };\n};\n\nconst fetchQuote = ()=>(dispatch)=>{\n  dispatch(getQuote())\n  api.fetchQuote()\n    .then((res)=>{\n      dispatch(getQuoteSuccess(res))\n    })\n    .catch((err)=> {\n      dispatch(getQuoteFailure(err))\n    })\n}\n\n\n\nexport default {GET_QUOTE,GET_QUOTE_SUCCESS,GET_QUOTE_FAILURE,getQuote,getQuoteSuccess,getQuoteFailure,fetchQuote}"]},"metadata":{},"sourceType":"module"}