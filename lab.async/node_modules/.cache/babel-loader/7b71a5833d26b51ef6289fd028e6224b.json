{"ast":null,"code":"import _objectSpread from \"/Users/gabrielapleban/CL-Redux-Labs/lab.async/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { GET_QUOTE, GET_QUOTE_SUCCESS, GET_QUOTE_FAILURE } from './actions';\nvar initialState = {\n  loading: false,\n  error: \"\",\n  quote: null\n};\n\nfunction quoteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === GET_QUOTE) {\n    return _objectSpread({}, state, {\n      loading: true\n    });\n  }\n\n  if (action.type === GET_QUOTE_SUCCESS) {\n    return _objectSpread({}, state, {\n      loading: false\n    });\n  }\n\n  if (action.type === GET_QUOTE_FAILURE) {\n    return _objectSpread({}, state, {\n      loading: false,\n      error: action.payload\n    });\n  }\n\n  return state;\n}\n\nexport default combineReducers({\n  quote: quoteReducer\n});","map":{"version":3,"sources":["/Users/gabrielapleban/CL-Redux-Labs/lab.async/src/redux/reducer.js"],"names":["combineReducers","GET_QUOTE","GET_QUOTE_SUCCESS","GET_QUOTE_FAILURE","initialState","loading","error","quote","quoteReducer","state","action","type","payload"],"mappings":";AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAAQC,SAAR,EAAkBC,iBAAlB,EAAoCC,iBAApC,QAA4D,WAA5D;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAC,EAFW;AAGjBC,EAAAA,KAAK,EAAC;AAHW,CAArB;;AAOA,SAASC,YAAT,GAAgD;AAAA,MAA1BC,KAA0B,uEAApBL,YAAoB;AAAA,MAAPM,MAAO;;AAC5C,MAAGA,MAAM,CAACC,IAAP,KAAgBV,SAAnB,EAA6B;AACzB,6BAAUQ,KAAV;AACAJ,MAAAA,OAAO,EAAC;AADR;AAEH;;AACD,MAAGK,MAAM,CAACC,IAAP,KAAgBT,iBAAnB,EAAqC;AACjC,6BAAUO,KAAV;AACAJ,MAAAA,OAAO,EAAC;AADR;AAEH;;AACD,MAAIK,MAAM,CAACC,IAAP,KAAgBR,iBAApB,EAAsC;AAClC,6BAAWM,KAAX;AACAJ,MAAAA,OAAO,EAAC,KADR;AAEAC,MAAAA,KAAK,EAACI,MAAM,CAACE;AAFb;AAIH;;AAED,SAAOH,KAAP;AACH;;AAED,eAAeT,eAAe,CAAC;AAC3BO,EAAAA,KAAK,EAAEC;AADoB,CAAD,CAA9B","sourcesContent":["import {combineReducers} from 'redux';\nimport {GET_QUOTE,GET_QUOTE_SUCCESS,GET_QUOTE_FAILURE} from './actions'\n\nconst initialState = {\n    loading: false,\n    error:\"\",\n    quote:null\n\n}\n\nfunction quoteReducer(state=initialState,action){\n    if(action.type === GET_QUOTE){\n        return{...state,\n        loading:true}\n    }\n    if(action.type === GET_QUOTE_SUCCESS){\n        return{...state,\n        loading:false}\n    }\n    if (action.type === GET_QUOTE_FAILURE){\n        return {...state,\n        loading:false,\n        error:action.payload\n        }\n    }\n\n    return state\n}\n\nexport default combineReducers({\n    quote: quoteReducer\n})"]},"metadata":{},"sourceType":"module"}