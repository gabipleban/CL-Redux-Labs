{"ast":null,"code":"// Tutaj zaimplementuj akcje\nexport var START_ROCKET = \"START_ROCKET\";\nexport var COUNTER = \"COUNTER\";\nexport var counter = function counter(current) {\n  return {\n    type: COUNTER,\n    payload: current - 1\n  };\n};\nexport var start = function start() {\n  return {\n    type: START_ROCKET\n  };\n};\nexport var deploy = function deploy() {\n  return function (dispatch, getState) {\n    var interval = setInterval(function () {\n      var curState = getState();\n\n      if (curState.counter === 0) {\n        clearInterval(interval);\n        dispatch(start());\n      } else {\n        dispatch(counter(curState.counter));\n      }\n    }, 1000);\n  };\n};","map":{"version":3,"sources":["/Users/gabrielapleban/CL-Redux-Labs/lab.rocket/src/redux/actions.js"],"names":["START_ROCKET","COUNTER","counter","current","type","payload","start","deploy","dispatch","getState","interval","setInterval","curState","clearInterval"],"mappings":"AACA;AACA,OAAO,IAAMA,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,OAAO,GAAI,SAAjB;AAGP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD;AAAA,SAAc;AACjCC,IAAAA,IAAI,EAAEH,OAD2B;AAEjCI,IAAAA,OAAO,EAAEF,OAAO,GAAG;AAFc,GAAd;AAAA,CAAhB;AAKP,OAAO,IAAMG,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAO;AACxBF,IAAAA,IAAI,EAAEJ;AADkB,GAAP;AAAA,CAAd;AAKP,OAAO,IAAMO,MAAM,GAAG,SAATA,MAAS;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAuB;AAC/C,QAAMC,QAAQ,GAAGC,WAAW,CAAC,YAAI;AAC7B,UAAMC,QAAQ,GAAEH,QAAQ,EAAxB;;AACA,UAAGG,QAAQ,CAACV,OAAT,KAAqB,CAAxB,EAA0B;AACtBW,QAAAA,aAAa,CAACH,QAAD,CAAb;AACAF,QAAAA,QAAQ,CAACF,KAAK,EAAN,CAAR;AACH,OAHD,MAGM;AACFE,QAAAA,QAAQ,CAACN,OAAO,CAACU,QAAQ,CAACV,OAAV,CAAR,CAAR;AACH;AACJ,KAR2B,EAQ1B,IAR0B,CAA5B;AASH,GAVqB;AAAA,CAAf","sourcesContent":["  \n// Tutaj zaimplementuj akcje\nexport const START_ROCKET = \"START_ROCKET\"\nexport const COUNTER =  \"COUNTER\"\n\n\nexport const counter = (current) => ({\n    type: COUNTER,\n    payload: current - 1\n})\n\nexport const start = () => ({\n    type: START_ROCKET,\n\n})\n\nexport const deploy = () => (dispatch, getState) =>{\n    const interval = setInterval(()=>{\n        const curState= getState();\n        if(curState.counter === 0){\n            clearInterval(interval);\n            dispatch(start())\n        }else {\n            dispatch(counter(curState.counter))\n        }\n    },1000)\n}\n"]},"metadata":{},"sourceType":"module"}